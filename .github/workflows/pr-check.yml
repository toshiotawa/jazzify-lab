name: PR Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint-and-type-check:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install --frozen-lockfile
      
      - name: Run linter
        run: npm run lint
      
      - name: Run type check
        run: npm run type-check

  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install --frozen-lockfile
      
      - name: Run tests
        run: npm test -- --run
      
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage
          path: coverage/

  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install --frozen-lockfile
      
      - name: Build application
        run: npm run build
      
      - name: Check build output
        run: |
          if [ ! -d "dist" ]; then
            echo "Build output directory 'dist' not found!"
            exit 1
          fi
          
          # Check if index.html exists
          if [ ! -f "dist/index.html" ]; then
            echo "index.html not found in build output!"
            exit 1
          fi
          
          # Check build size
          BUILD_SIZE=$(du -sb dist | cut -f1)
          echo "Build size: $BUILD_SIZE bytes"
          
          # Fail if build is too large (e.g., > 50MB)
          if [ $BUILD_SIZE -gt 52428800 ]; then
            echo "Build size exceeds 50MB limit!"
            exit 1
          fi

  check-dependencies:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Check package-lock.json sync
        run: |
          # Ensure package-lock.json is in sync with package.json
          npm install --frozen-lockfile
      
      - name: Check for security vulnerabilities
        run: npm audit --audit-level=high
        continue-on-error: true
      
      - name: Check for outdated dependencies
        run: npx npm-check-updates --format table
        continue-on-error: true